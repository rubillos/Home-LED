; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[env]
framework = arduino
platform = espressif32

board_build.f_cpu = 240000000L

lib_deps =
      adafruit/Adafruit NeoPixel@^1.11.0
      adafruit/Adafruit DotStar@^1.2.3
      lennarthennigs/ESP Telnet@^2.1.1

      ; homespan/HomeSpan@^1.7.2

; platform_packages =
;       platformio/tool-openocd-esp32@^2.1200.20230313

monitor_speed = 115200
monitor_filters = esp32_exception_decoder
monitor_echo = yes

build_flags =
      -Wall

[Debug_Base]
build_type = debug
debug_build_flags =
      -Og
      ; -DCORE_DEBUG_LEVEL=4

board_debug.openocd_target = esp32s3-builtin.cfg
debug_extra_cmds =
      set remotetimeout 5
;
; upload_protocol = esp-builtin
; debug_tool = esp-builtin
; debug_speed = 12000

; [More_debug]
; upload_protocol = esp-builtin
; debug_tool = esp-builtin
; debug_speed = 500

; debug_extra_cmds =
;       board board/esp32s3-builtin.cfg
; pio pkg exec -- openocd -f board/esp32s3-builtin.cfg
; debug_tool = custom
; debug_server =
;     ${platformio.packages_dir}/tool-openocd-esp32@2.1100.20220706/openocd
;     -f
;     /board/esp32s3-builtin.cfg
; debug_init_cmds =
;       target remote :3333,
;       set remote hardware-watchpoint-limit 2,
;       mon reset halt,
;       thb app_main,
;       flushregs

[device_ip]
; Fan Controller - LR
; device_port = 192.168.7.93

; Penguin Light
; device_port = 192.168.7.21

device_port = 192.168.7.1

[OTA_Base]
upload_port = ${device_ip.device_port}
monitor_port = socket://${device_ip.device_port}:23

upload_protocol = espota
upload_flags =
      --port=3232
      --auth=seattle

[TinyS3_Base]
board = um_tinys3
build_flags = ${env.build_flags} -DTINYS3
board_build.partitions = partition_8MB_OTA.csv

[QTPyS3_Base]
board = adafruit_qtpy_esp32s3_nopsram
build_flags = ${env.build_flags} -DQTPYS3
board_build.partitions = partition_8MB_OTA.csv

[env:Release-TinyS3]
extends = TinyS3_Base

[env:Release-QTPyS3]
extends = QTPyS3_Base

[env:OTA-Release-TinyS3]
extends = env:Release-TinyS3, OTA_Base
build_flags = ${env:Release-TinyS3.build_flags} -DOTADEBUG

[env:OTA-Release-QTPyS3]
extends = env:Release-QTPyS3, OTA_Base
build_flags = ${env:Release-QTPyS3.build_flags} -DOTADEBUG

[env:Debug-TinyS3]
extends = TinyS3_Base, Debug_Base
build_flags = ${TinyS3_Base.build_flags} -DDEBUG

[env:Debug-QTPyS3]
extends = QTPyS3_Base, Debug_Base
build_flags = ${QTPyS3_Base.build_flags} -DDEBUG

[env:OTA-Debug-TinyS3]
extends = env:Debug-TinyS3, OTA_Base
build_flags = ${env:Debug-TinyS3.build_flags} -DOTADEBUG

[env:OTA-Debug-QTPyS3]
extends = env:Debug-QTPyS3, OTA_Base
build_flags = ${env:Debug-QTPyS3.build_flags} -DOTADEBUG
